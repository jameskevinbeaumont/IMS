@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (inventories is not null && inventories.Count > 0)
        {
            foreach (var inv in inventories)
            {
                <InventoryListItemComponent Inventory="inv"></InventoryListItemComponent>
            }
        }

    </tbody>
</table>

@code {
    // Declare List of Inventory objects that is nullable (?)
    private List<Inventory>? inventories;

    // Loading the inventories when the component initializes
    protected override async Task OnInitializedAsync()
    {
        inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync()).ToList();
        //inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync("whe")).ToList();
        //inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync("xyz")).ToList();
    }
}